{
  "_args": [
    [
      {
        "raw": "ip-proxy-request",
        "scope": null,
        "escapedName": "ip-proxy-request",
        "name": "ip-proxy-request",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/kk/Documents/GitHub/Coding/coding-spider-matser"
    ]
  ],
  "_cnpm_publish_time": 1525440205381,
  "_from": "ip-proxy-request",
  "_hasShrinkwrap": false,
  "_id": "ip-proxy-request@1.0.0",
  "_location": "/ip-proxy-request",
  "_nodeVersion": "8.9.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/ip-proxy-request_1.0.0_1525440205271_0.8066258910538149"
  },
  "_npmUser": {
    "name": "cky917",
    "email": "576779975@qq.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {
    "aws-sign2": "0.7.0",
    "aws4": "1.7.0",
    "caseless": "0.12.0",
    "combined-stream": "1.0.6",
    "extend": "3.0.1",
    "forever-agent": "0.6.1",
    "form-data": "2.3.2",
    "har-validator": "5.0.3",
    "hawk": "6.0.2",
    "http-signature": "1.2.0",
    "is-typedarray": "1.0.0",
    "isstream": "0.1.2",
    "json-stringify-safe": "5.0.1",
    "mime-types": "2.1.18",
    "oauth-sign": "0.8.2",
    "performance-now": "2.1.0",
    "qs": "6.5.1",
    "safe-buffer": "5.1.2",
    "stringstream": "0.0.6",
    "tough-cookie": "2.3.4",
    "uuid": "3.2.1"
  },
  "_requested": {
    "raw": "ip-proxy-request",
    "scope": null,
    "escapedName": "ip-proxy-request",
    "name": "ip-proxy-request",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npm.taobao.org/ip-proxy-request/download/ip-proxy-request-1.0.0.tgz",
  "_shasum": "e29050f328e0c003c5030d0419d25a9c97c8b28a",
  "_shrinkwrap": null,
  "_spec": "ip-proxy-request",
  "_where": "/Users/kk/Documents/GitHub/Coding/coding-spider-matser",
  "author": {
    "name": "cky",
    "email": "576779975@qq.com"
  },
  "bugs": {
    "url": "https://github.com/cky917/ipProxyRequest/issues"
  },
  "dependencies": {
    "cheerio": "^1.0.0-rc.2",
    "request": "git+https://github.com/cky917/request.git"
  },
  "description": "nodejs 免费ip代理发送请求",
  "devDependencies": {
    "jest": "^22.4.3"
  },
  "directories": {},
  "dist": {
    "shasum": "e29050f328e0c003c5030d0419d25a9c97c8b28a",
    "size": 37971,
    "noattachment": false,
    "tarball": "http://registry.npm.taobao.org/ip-proxy-request/download/ip-proxy-request-1.0.0.tgz"
  },
  "gitHead": "cd6f7eba82bcc81f5d9804151d7ee4507f25640f",
  "homepage": "https://github.com/cky917/ipProxyRequest#readme",
  "keywords": [
    "nodejs",
    "proxy",
    "ip"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "cky917",
      "email": "576779975@qq.com"
    }
  ],
  "name": "ip-proxy-request",
  "optionalDependencies": {},
  "publish_time": 1525440205381,
  "readme": "# ipProxyRequest\n\n一个可以通过免费动态Ip代理发出请求的模块，适合爬虫使用。\n\n获取ip的思路是参考的[这个仓库](https://github.com/kongtianyi/freeProxySpider)，在此基础上进行了代码优化和拓展，封装了request逻辑，可以直接使用。\n\n使用方法，具体可以参考/examples/index.js：\n\n安装：\n`npm install ip-proxy-request --save`\n\n```javascript\nconst ipProxyRequest = require('ip-proxy-request')\n// async\nconst { response, data } = await ipProxyRequest.send({ url: 'xxxx'})\n\n// promise\nipProxyRequest.send({ url: 'xxxx'})\n.then(({ response, data }) => {\n // xxx\n}).catch(err => {\n // xxx\n})\n```\n\n模块是去爬取[http://www.xicidaili.com/nn](http://www.xicidaili.com/nn)这个页面获取免费代理ip，所以强依赖这个网站。\n\n由于代理ip的不稳定性较大，有些ip的有效期也短。进行多次请求的时候，每次会先去拉取ip列表，逐个进行尝试，能够正常返回请求的Ip就是`succuessProxy`，会继续用于下一次请求，直至这个ip无法正确访问，则用ip列表的下一个进行再尝试。如果ip列表都尝试完了，就会再去爬取ip列表，循环这个操作。\n\n用代理ip访问返回的结果不一定是正确的结果，如果返回的还是错误的页面，比如一些给被封Ip的乱码页，则需要自己进行判断后，调`ipProxyRequest.refreshSuccuessProxy()` 将succuessProxy置为空，这样下次请求就会用新的ip。\n\n`ipProxyRequest.send`方法，传参是`request`模块的标准入参格式。\n该方法返回一个`promise`对象。对于每次调用请求，如果一次尝试ip没有正确返回，则会换一个ip进行再请求，直至有正确返回，才会`resolve({ response, data })`。这整个重复尝试的时间如果超过40s，则会`reject(new Error('timeout'))`, 以防止错误的`url`导致的一直错误请求。\n\n主要用于爬虫，所以如果不传`'User-Agent'`, 会默认给随机一个`'User-Agent'`。用由于获取ip过程以及ip自身的代理速度原因，请求会比较慢，我给的超时也给得比较高，不适合对响应速度要求高的场景。\n\n由于request的依赖的模块`tunnel-agent`在遇到某些请求错误时，会通过assert模块抛出一个不可被catch的错误，导致程序意外退出 看了该仓库的issue，发现很多人也遇到了这个问题，而且该模块好像没有人维护了...所以我fork了一份request到我的仓库，把`tunnel-agent`模块的下载地址指向了另外一个开发者解决了这个问题的`tunnel-agent`仓库。",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cky917/ipProxyRequest.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "1.0.0"
}
